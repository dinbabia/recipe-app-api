version: "3.9"

services:
  # app is the name of the service
  app:
    build:
      context: .
      args:
       - DEV=true
    ports:
    # Port mappings. Maps Port 8000 from local machine to Port 8000 inside docker container
     - "8000:8000"
    volumes:
    # Mapping directories from system to docker container.
    # Update changes to be reflected in the container.
     - ./app:/app
    command: >
     sh -c "python manage.py wait_for_db && 
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    environment:
     - DB_HOST=db # Host/Service name
     - DB_NAME=devdb
     - DB_USER=devuser
     - DB_PASS=changeme
    depends_on:
     - db # Host/Service will start to initialize first before app service. If db service fails, app service will fail
  db:
    image: postgres:13-alpine
    volumes:
     - dev-db-data:/var/lib/postgresql/data
    environment:
     - POSTGRES_DB=devdb # Set initial db config for new db service for local
     - POSTGRES_USER=devuser
     - POSTGRES_PASSWORD=changeme

volumes:
  dev-db-data:
